{"version":3,"sources":["../server.js"],"names":["require","config","app","use","express","json","req","res","next","header","get","status","send","routes","mongoose","Promise","global","connect","promiseLibrary","then","console","log","catch","err","error","app_error","message","listen","module","exports"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AAMA;;;;;;AAJAA,QAAQ,QAAR,EAAkBC,MAAlB;;AAEA,IAAMC,MAAK,wBAAX;;AAOAA,IAAIC,GAAJ,CAAQC,kBAAQC,IAAR,EAAR;;AAEAH,IAAIC,GAAJ,CAAQ,UAASG,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC7BD,QAAIE,MAAJ,CAAW,6BAAX,EAA0C,GAA1C;AACAF,QAAIE,MAAJ,CAAW,8BAAX,EAA2C,8DAA3C;AACAD;AACF,CAJF;;AAOAN,IAAIQ,GAAJ,CAAQ,OAAR,EAAgB,UAACJ,GAAD,EAAKC,GAAL,EAAW;AACvB,WAAOA,IAAII,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CACH;AACI,mBAAY;AADhB,KADG,CAAP;AAKH,CAND;;AAQAV,IAAIC,GAAJ,CAAQ,MAAR,EAAeU,cAAf;;AAEAC,mBAASC,OAAT,GAAkBC,OAAOD,OAAzB;;AAECD,mBAASG,OAAT,CAAiB,6BAAjB,EAAgD,EAAEC,gBAAgBlB,QAAQ,UAAR,CAAlB,EAAhD,EACEmB,IADF,CACO;AAAA,WAAOC,QAAQC,GAAR,CAAY,uBAAZ,CAAP;AAAA,CADP,EAEEC,KAFF,CAEQ,UAACC,GAAD;AAAA,WAASH,QAAQI,KAAR,CAAcD,GAAd,CAAT;AAAA,CAFR;;AAKDrB,IAAIC,GAAJ,CAAQ,UAASoB,GAAT,EAAajB,GAAb,EAAiBC,GAAjB,EAAqBC,IAArB,EAA0B;AAC9BD,QAAII,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACa,WAAYF,IAAIG,OAAjB,EAArB;AACH,CAFD;;AAIAxB,IAAIyB,MAAJ,CAAW,IAAX,EAAgB,YAAI;AAChBP,YAAQC,GAAR,CAAY,wBAAZ;AACH,CAFD;;AAIAO,OAAOC,OAAP,GAAiB3B,GAAjB","file":"server.js","sourcesContent":["import express from 'express';\nimport mongoose from 'mongoose';\nimport routes from './routes/user';\n\nrequire('dotenv').config();\n\nconst app =express();\n\nimport LocalStorage from 'local-storage-es6'\n \n\n\n\napp.use(express.json())\n\napp.use(function(req, res, next) {\n    res.header(\"Access-Control-Allow-Origin\", \"*\");\n    res.header(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept,Authorization\");\n    next();\n });\n\n \napp.get('/api/',(req,res)=>{\n    return res.status(200).send(\n        {\n            'message' : 'working'\n        }\n    )   \n})   \n\napp.use('/api',routes);\n\nmongoose.Promise =global.Promise;\n\n mongoose.connect('mongodb://localhost/nestemp', { promiseLibrary: require('bluebird') })\n  .then(() =>  console.log('connection successful'))\n  .catch((err) => console.error(err));\n\n\napp.use(function(err,req,res,next){\n    res.status(422).send({app_error : err.message});\n})\n\napp.listen(3000,()=>{\n    console.log(\"listening on port 3000\");\n})\n\nmodule.exports = app;"]}